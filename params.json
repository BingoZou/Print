{"name":"Print","tagline":"A lightweight Android library for use iconic fonts.","body":"Print\r\n=====\r\n\r\n[![Android Arsenal](https://img.shields.io/badge/Android%20Arsenal-Print-brightgreen.svg?style=flat)](https://android-arsenal.com/details/1/1016)\r\n\r\nA lightweight Android library for use iconic fonts.\r\n\r\n![image](https://raw.githubusercontent.com/johnkil/Print/master/art/print.jpg)\r\n\r\n<a href=\"https://play.google.com/store/apps/details?id=com.github.johnkil.print.sample\">\r\n  <img alt=\"Get it on Google Play\"\r\n       src=\"http://www.android.com/images/brand/get_it_on_play_logo_small.png\" />\r\n</a>\r\n\r\n\r\nDownload\r\n--------\r\n\r\nGradle:\r\n\r\n```groovy\r\ncompile 'com.github.johnkil.print:print:1.3.0'\r\n```\r\n\r\nMaven:\r\n\r\n```xml\r\n<dependency>\r\n    <groupId>com.github.johnkil.print</groupId>\r\n    <artifactId>print</artifactId>\r\n    <version>1.3.0</version>\r\n    <type>aar</type>\r\n</dependency>\r\n```\r\n\r\n\r\nGetting started\r\n---------------\r\n\r\n#### Add fonts\r\n\r\nAdd your custom iconic fonts to `assets/`.\r\n\r\n\r\n#### Setup default font\r\n\r\nDefine your default iconic font using `PrintConfig` in [Application.onCreate()][1] method. This font will be used in cases when the value of a font is not specified.\r\n\r\n```java\r\npublic class MyApplication extends Application {\r\n\r\n    @Override\r\n    public void onCreate() {\r\n        super.onCreate();                \r\n        PrintConfig.initDefault(getAssets(), \"fonts/iconic-font.ttf\");\r\n    }\r\n\r\n}\r\n```\r\n\r\n_Note: The definition of the default font is not necessary, in this case, you must specify the value of the font all the time._\r\n\r\n\r\nUsage\r\n-----\r\n\r\n#### PrintDrawable\r\n\r\nIf you need an icon in `ImageView` or in `ActionBar`, then you should use `PrintDrawable`. To create the drawable using `PrintDrawable.Builder`.\r\n\r\n```java\r\n@Override\r\npublic boolean onCreateOptionsMenu(Menu menu) {\r\n    getMenuInflater().inflate(R.menu.main, menu);\r\n    // Set an icon in the ActionBar\r\n    menu.findItem(R.id.action_info).setIcon(\r\n            new PrintDrawable.Builder(context)\r\n                    .iconTextRes(R.string.ic_info)\r\n                    .iconColorRes(R.color.ab_icon_color)\r\n                    .iconSizeRes(R.dimen.ab_icon_size)\r\n                    .build()\r\n    );\r\n    return true;\r\n}\r\n```\r\n\r\n\r\n#### Custom views\r\n\r\nUse `PrintView` as single icon in your layout.\r\n\r\n```xml\r\n<com.github.johnkil.print.PrintView\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        print:iconText=\"@string/ic_android\"\r\n        print:iconColor=\"@color/icon_color\"\r\n        print:iconSize=\"@dimen/icon_size\"/>\r\n```\r\n\r\nOr use `PrintButton` to create a button with an icon. Using a view similar to `PrintView`.\r\n\r\n```xml\r\n<com.github.johnkil.print.PrintButton\r\n        ... />\r\n```\r\n\r\n#### XML Attributes\r\n\r\n| _Attribute Name_ | _Related Method_                    |\r\n| :--------------- | :---------------------------------- |\r\n| __iconText__     | setIconTextRes(int resId)           |\r\n|                  | setIconText(CharSequence text)      |\r\n| __iconCode__     | setIconCodeRes(int resId)           |\r\n|                  | setIconCode(int code)               |\r\n| __iconColor__    | setIconColorRes(int resId)          |\r\n|                  | setIconColor(int color)             |\r\n|                  | setIconColor(ColorStateList colors) |\r\n| __iconSize__     | setIconSizeRes(int resId)           |\r\n|                  | setIconSizeDp(float size)           |\r\n|                  | setIconSize(int unit, float size)   |\r\n| __iconFont__     | setIconFont(String path)            |\r\n|                  | setIconFont(Typeface font)          |\r\n\r\n\r\nLinks\r\n-----\r\n\r\n* [Android-Icon-Fonts][2] - Material and Holo iconic fonts.\r\n\r\n\r\nLicense\r\n-------\r\n\r\n    Copyright 2014 Evgeny Shishkin\r\n    \r\n    Licensed under the Apache License, Version 2.0 (the \"License\");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n    \r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n    \r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n    \r\n\r\n[1]: http://developer.android.com/reference/android/app/Application.html#onCreate%28%29\r\n[2]: https://github.com/johnkil/Android-Icon-Fonts\r\n\r\n[0]: https://github.com/shamanland/fonticon\r\n[0]: https://github.com/atermenji/IconicDroid\r\n[0]: https://github.com/JoanZapata/android-iconify\r\n[0]: https://github.com/chrisjenx/Calligraphy\r\n[0]: https://github.com/theDazzler/droidicon\r\n[0]: https://github.com/mikepenz/Android-Iconics\r\n[0]: https://github.com/Malinskiy/android-material-icons\r\n","google":"UA-37227385-7","note":"Don't delete this file! It's used internally to help with page regeneration."}